#!/bin/sh
#
# Name: 10-generate-pdfmanual.sh within siduction manual /development folder.
#
# Wrapper script around pandoc
# Provides templates to apply with pdf processing
# Copyright Claes Holmerson 2010, GPL licensed (see COPYING for details)
# Copyright Hendrik Lehmbruch 2021, GPL licensed (see COPYING for details)
# Copyright Axel Konrad 2022, GPL licensed (see COPYING for details)
# Copyright Marcel Ilg 2022, GPL licensed (see COPYING for details)
# Added code to generate siduction manual.
#
# COPYING: https://www.gnu.org/licenses/gpl-3.0.html
#
# Usage:
#  Normaly it is called by 00-generate-manual.pl
#  If you want to use this file directly, then change as user
#  in a terminal into the folder /development.
#  Enter the program name and, separated by space, the two-letter shortcode
#  for the language in which the manual should be created. The language shortcode
#  must correspond to the names of the subfolder in /data.
#  Example: ./10-generate-pdf-manual.sh en
#
# For debugging the LaTeX code generated by pandoc this script provides an
# additional debug switch. Enabling the switch produces TeX source code instead
# of an pdf.  To enable this debug output add --tex-debug after the language
# code.
# Example: ./10-generate-pdf-manual.sh en --tex-debug

### default output_format
output_format=pdf

### General test
if [ $# -gt 1 ]
then
    if [ $# -eq 2 ] && [ $2 = --tex-debug ]
    then
        echo "Creating LaTeX file instead of pdf."
        output_format=tex
    else
        echo "More than two options or the second option is not '--tex-debug'"
        exit 1
        # The error message immediately gives a hint to the correct option.
    fi
fi

### country specific page options
case $1 in
de)
    language=de-DE      ## LaTex options, see: 
    paper=a4paper       ## https://de.overleaf.com/learn/latex/Page_size_and_margins
    textheight=227mm    ##
    titel="Siduction Handbuch"
    team="siduction Team"
    datum=$(date +%d.%m.%Y)
    ;;
en)
    language=en-US
    paper=letterpaper
    textheight=211mm
    titel="siduction manual"
    team="siduction team"
    datum=$(LC_ALL=en_US.utf8 date '+%B %d, %Y')
    ;;

#it)                    # New translations dummy
#    language=it-IT
#    paper=a4paper
#    textheight=227mm
#    titel="Manuale di siduction"
#    team="siduction team"
#    datum=$(date +%F)
#    ;;
*)
    echo "Language shortcode is missing or not supported."
    exit 1
    ;;
esac
langcode=$1


### Processing the files to create the PDF:
#  - Create folder ../work and copy files.
#  - Create the file list from the folder ../work.
#  - pandoc (LaTex) Remove metatag from all files.
#  - pandoc (LaTex) Insert "\pagebreak" at the end of each file.
#  - pandoc (LaTex) Insert metatag only in the first file.
#  - Remove file names in the link to other manual pages.
#  - Create folder for the PDF.

mkdir ../work/ || exit 1

cp -pP ../data/$langcode/0* ../work/ 2>/dev/null

LISTE=$(ls ../work/[[:digit:]]*)

for i in $LISTE ; do sed -i -E '/^% \w/d' "$i"; done

for i in $LISTE ; do sed -i -e '$ a \\\clearpage' "$i"; done

sed -i -e "1 i% $titel" -e "1 i% $team" -e "1 i% $datum" ../work/0000-*

for i in $LISTE ; do sed -i -e "s/([-_./[:alnum:]]*$langcode.md#/(#/g" "$i"; done

if [ ! -d ../data/$langcode/pdf ]; then mkdir ../data/$langcode/pdf; fi


### Launch the pandoc command
# Path to header and source-directories, based on the fact we use it in folder /development.

pandoc \
     -N --toc --toc-depth=4 \
     -p --pdf-engine=xelatex \
     -H ./11-header-pdf-manual.tex \
     --listings \
     --resource-path=./:../data/$langcode/:../data/$langcode/images/:../sys-images/ \
     -V lang=$language \
     -V papersize=$paper \
     -V geometry:textheight=$textheight \
     -V fontsize=12pt \
     -V linkcolor=blue \
     -V nohyphenation=false $LISTE \
     -o ../data/$langcode/pdf/siduction-manual_$langcode.$output_format


### Remove the folder ../work
rm -r ../work
