<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<title>Manuais do siduction - rdiff (RO)</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../css/content.css");</style>
        <style type="text/css" media="all">@import url("../css/menu.css");</style>
        <style type="text/css" media="print">@import url("../css/print.css");</style>
        <link rel ="shortcut icon" href="../favicon.ico" />
        <script type="text/javascript" src="../js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../css/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../css/ie_5-6_override.css">
        <![endif]-->
</head>
<body class="body-main">
<div>
<div id="main-page">
	<div class="divider" id="rdiff">
			<h2 id="top-header">Como Fazer Back-up do Sistema com o rdiff-backup</h2>
				<p>rdiff-backup é uma ferramenta usada para fazer back-ups (cópias) de seus arquivos. Ele roda em diversos sistemas *nix.</p>

				<p class="highlight-2">Rode os comandos como root no terminal/console, a menos que se diga outra coisa.</p>

				<p>* ótimo para recuperar dist-upgrades e atualizações do kernel que falharam etc (e também para restaurar arquivos individuais).<br />
				* só faz back-ups do que tiver sofrido alterações, como faz o rsync (donde cada back-up não demorar muito).<br />
				* mantém um histórico das mudanças (portanto, você pode recuperar um arquivo que você apagou três semanas atrás!)<br />
				* faz back-ups seguros pela rede (usando ssh).<br />
				* faz back-ups de partições enquanto estão montadas (portanto, é fácil automatizar back-ups diários... não há necessidade de desmontar).<br />
				* pode restaurar tudo se seu HD morrer e você tiver de comprar um novo.<br />
				* reconfigura-se para fazer back-ups de grandes redes (fácil no Linux; no Windows é mais complicado) e é usado em negócios.<br />
				* é um aplicativo de linha de comando, portanto é ótimo para quem gosta de fazer coisas como automatizar back-ups (usando um script chamado pelo cron).<br />
				* lembra e lida bem com donos de arquivos e permissões e também com links simbólicos (e todo esse tipo de coisa); assim, após uma restauração, tudo fica exatamente como era antes.</p>

			<h6>Do que você vai precisar</h6>
				<p>rdiff-backup mantém uma cópia inteira (não comprimida) dos arquivos objeto do back-up e guarda, igualmente, um histórico (back-ups incrementais), o que significa que você vai precisar de um espaço maior do que aquele que está sendo copiado. Por exemplo, se você vai fazer um back-up de 100GB de espaço, você vai precisar de 120GB (de preferência, em um HD separado!).</p>

			<h6>Como configurá-lo</h6>
				<p>Digamos que seu computador tenha:<br />
				* um HD de 100GB (sda), com sda1 usada como partição root, sda5 para guardar músicas e outros arquivos e sda6 como partição swap.<br />
				* outro HD de 200GB (sdb), não utilizado no momento, apenas com a partição sdb1; use-a para seus back-ups.<br />
				* endereço IP 192.168.0.1</p>

				<p>A primeira coisa a fazer é instalar rdiff-backup:</p>
<pre>
# apt-get install rdiff-backup
</pre>
				<p>Embora você possa fazer cópia de qualquer diretório, nosso exemplo é para back-ups de partições inteiras...queremos fazer back-up das partições sda1 e sda5; vamos, então, criar alguns diretórios para armazenar os dados:</p>
<pre>
# mkdir -p /media/sdb1/rdiff-backups/192.168.0.1/root
# mkdir -p /media/sdb1/rdiff-backups/192.168.0.1/sda5
</pre>
				<p>Você precisa do endereço IP bem especificado para o caso de usar esta máquina para fazer o back-up de outra (assunto coberto mais tarde).</p>

			<h6>Como fazer o back-up</h6>

				<p>rdiff-backup usa a sintaxe <span class="highlight-3">rdiff-backup source-dir dest-dir</span>. Nota: especifique sempre os nomes dos diretórios, não os nomes dos arquivos.</p>

				<p>Para fazer cópia de sda5, execute:</p>
<pre>
# rdiff-backup /media/sda5 /media/sdb1/rdiff-backups/192.168.0.1/sda5
</pre>
				<p>e para a partição root:</p>
<pre>
# rdiff-backup --exclude '/tmp/*' --exclude '/proc/*' --exclude '/sys/*' --exclude '/media/*/*' / /media/sdb1/rdiff-backups/192.168.0.1/root
</pre>
				<p>Qualquer mensagem de erro "AF_UNIX path too long" pode ser ignorada. Isso vai demorar um pouco, porque é a primeira vez que você faz um back-up dessa partição e, assim, o rdiff-backup terá de fazer cópia de tudo (e não apenas das diferenças). Note que não queremos fazer back-up do diretório /tmp, pois ele sempre muda, nem de /proc ou /sys, que não contêm arquivos reais, e nem de pontos de montagem. Se você fizer back-up dos pontos de montagem, então você estará copiando sdb1 e você poderá cair em um loop (círculo vicioso) infinito! Uma maneira de evitar isso é fazer back-up dos pontos de montagem separadamente.</p>

				<p>A razão de você ter colocado '/proc/*' e não apenas '/proc' é que o nome do diretório /proc fará parte do back-up, mas seu conteúdo será ignorado. O mesmo vale para /tmp, /sys e todos os nomes dos pontos de montagem.</p>

				 <p>Desse jeito, se você destruir sua partição /root e restaurá-la, /tmp, /proc, /sys e os nomes dos pontos de montagem serão criados (como deve ser). Se /tmp não existir quando o X for iniciado, ele vai reclamar. (Veja as páginas de manual para saber mais sobre --exclude e --include).</p>

			<h6>Como restaurar diretórios a partir de back-ups</h6>

				<p>rdiff-backup usa a sintaxe:</p>
<pre>
rdiff-backup -r &lt;de-quando&gt; &lt;dir-fonte&gt; &lt;dir-destino&gt;
</pre>
				<p>Se você deletar acidentalmente o diretório /media/sda7/fotos, você pode restaurá-lo com:</p>
<pre>
# rdiff-backup -r now /media/sdb1/rdiff-backups/192.168.0.1/sda5/fotos /media/sda5/fotos
</pre>
				<p>A opção "-r now" significa que é para restaurar a partir do último back-up. Se você tem feito cópias regularmente de tudo (via crontab, p. ex.) e só reparou dias depois que o diretório de fotos foi apagado, você terá de fazer o back-up a partir de alguns dias atrás (e não 'now' - agora -). Ou talvez você apenas queira voltar a uma versão anterior de alguma coisa.</p>

				<p>Se você quiser restaurar a partir de três dias atrás, então use "-r 3D" ... mas, como dizem as páginas de manual, note o seguinte:</p>

				<p class="highlight-1">"3D" se refere a 72 horas antes do presente e se não houver backup daquele dia, o rdiff-backup restaura a partir da data imediatamente anterior. No caso acima, por exemplo, se "3D" for usado e somente existir back-ups de 2 e 4 dias atrás, o diretório será restaurado a seu estado de 4 dias atrás. (Portanto, você terá de pensar um pouco antes de restaurar).</p>

				<p>Usando o seguinte, você terá datas e horas dos back-ups de sda5:</p>
<pre>
# rdiff-backup -l /media/sdb1/rdiff-backups/192.168.0.1/sda5
</pre>
			<h5>Como restaurar partições</h5>

				<p>Você pode também restaurar partições inteiras (mounts), pois um ponto de montagem nada mais é que um diretório.</p>

				<p class="highlight-2">ATENÇÃO: Não restaure a partição root, se ela está em uso!!! Com apenas um comando, você perderá todos os arquivos em todas as partições, inclusive todos seus back-ups, mesmo que estiverem em HDs separados!! O rdiff-backup segue exatamente as instruções que recebeu...se o back-up para a partição root tiver pontos de montagens vazios, então para restaurar ao estado do back-up, ele deleta tudo nos pontos de montagem, para que tudo fique igual ao back-up.</p>

				<p>Para restaurar sda5 para o último back-up, faça isto:</p>
<pre>
# rdiff-backup -r now /media/sdb1/rdiff-backups/192.168.0.1/sda5 /media/sda5
</pre>
			<h5>Como restaurar a partição root</h5>

				<p>Restaurar a partição root não é tão simples. Não a restaure enquanto ela estiver montada (veja o aviso acima). É realmente útil poder restaurar a partição root, porque se você bagunçar tudo quando estiver instalando/atualizando ou quando estiver instalando um novo kernel etc, você tem a tranquilidade de saber que tudo pode voltar a ser como era antes em apenas 20 minutos.</p>

				<p>Um modo de restaurar a partição root é dar o boot em outra distribuição Linux que por acaso você tiver instalado. Assim, você será capaz de restaurar a partição root que você quer porque ela não está montada. Após restaurá-la, dê o boot por ela e perceba que as coisas estão exatamente como eram quando você fez o back-up. Este é de longe o jeito mais fácil.</p>

				<p>Outra maneira de restaurar a partição root é dar o boot pelo LiveCd do siduction e restaurar a partir dele, pois o rdiff-backup está incluído no CD. Se acaso ele não estiver na sua versão do LiveCD, digite no Grub (Bootoptions, Cheatcodes) a "cheatcode" 'unionfs' para ser capaz de instalar aplicações no modo LiveCD. Simplesmente carregue o siduction e digite no terminal:</p>
<pre>
$ sudo su
# wget -O /etc/apt/sources.list http://siduction.org/files/misc/sources.list
# apt-get update
# apt-get install rdiff-backup
</pre>
				<h6>Agora, vamos restaurar:</h6>
<pre>
# mount /dev/sda1 /media/sda1
# mount /dev/sdb1 /media/sdb1
# rdiff-backup -r now /media/sdb1/rdiff-backups/192.168.0.1/root /media/sda1
</pre>

				<p>Nota: se você não tiver um CD do siduction, mas se o LiveCD que você estiver usando tiver suporte do Klik, você pode instalar o rdiff-backup por ele e chamando:</p>
<pre>
$ sudo ~/.zAppRun ~/Desktop/rdiff-backup_0.13.4-5.cmg rdiff-backup -r now /media/sdb1/rdiff-backups/192.168.0.1/root /media/sda1
</pre>

				<p>É recomendável que todos que fizerem back-ups da partição root (com a intenção de restaurá-la) testem o processo de restauração. Nada pior que pensar que tudo está correto e só descobrir algo inesperado numa emergência.</p>

							<p>Se você mudou seu HD ou formatou-o novamente, volte a checar as UUIDs (ou rótulos) em <span class="highlight-3">/boot/grub/menu.lst (grub-legacy) or files in /etc/grub.d (grub2)</span> e <span class="highlight-3">/etc/fstab</span>, e faça as alterações necessárias. Um jeito fácil de obter as informações para alterar esses arquivos, se preciso for, é abrir um terminal e digitar, como root:</p>

<pre>
blkid
</pre>

			<h5>Como fazer back-ups de outros PCs</h5>

				<p>Você pode fazer back-ups de outros PCs a partir de sua máquina local, desde que seja possível a conexão de sua máquina com as outras, através do ssh (e desde que você tenha espaço sobrando em seu HD). O servidor ssh (sshd) precisa estar rodando em um PC remoto. Os outros PCs não precisam estar em sua rede local, eles podem estar em qualquer lugar do mundo.</p>

				<p>Vamos assumir que seu PC remoto tenha as seguintes características:<br />
				1) um HD de 100GB (sda1), em uso, somente com pontos de montagem<br />
				2) sda1 usado para a partição root<br />
				3) sda5 onde guardamos alguns arquivos temporários, que não serão objeto do back-up<br />
				4) sda6 para swap <br />
				5) endereço IP 192.168.0.2</p>

				<p>Nota: ambos HDs de 100GB não podem, geralmente, ser copiados em um HD de 200GB com o rdiff-backup (porque não há espaço para os arquivos incrementais), mas já que você não vai fazer back-up da partição sda5 em seu PC remoto (e tendo em vista que HDs raramente estão 100% cheios, mas não confie tanto nisso), então você pode concluir que, sim, você tem espaço suficiente. Toda vez que o rdiff-backup fizer um back-up, mais arquivos incrementais serão criados, ocupando mais e mais espaço.</p>

				<p>Você pode pedir ao rdiff-backup para manter apenas os back-ups do último mês; assim seu HD estará menos cheio do que se o rdiff-backup guardar dados de um ano inteiro. Naturalmente, você pode guardar dados de um ano, mas você terá de comprar outro HD.</p>

				<p>Antes de mais nada, instale o rdiff-backup no PC remoto também (todos os computadores cujos back-ups você deseja fazer e também o servidor de back-up precisam do rdiff-backup instalado).</p>

				<p>Para copiar o PC remoto em seu PC local, rode neste (IP 192.168.0.1): <span class="highlight-4">Note o use de duplos dois pontos --> :: </span></p>
<pre>
# mkdir /media/sdb1/rdiff-backups/192.168.0.2/root
# rdiff-backup --exclude '/tmp/*' --exclude '/proc/*' --exclude '/sys/*' --exclude '/media/*/*' 192.168.0.2::/ /media/sdb1/rdiff-backups/192.168.0.2/root
</pre>
				<p>Se você quiser restaurar um diretório no PC remoto, a restauração pode ser iniciada tanto no PC remoto quanto no PC local.</p>

				<p>Por exemplo, para restaurar o diretório /usr/local/games no PC remoto, iniciando o processo nele mesmo:</p>
<pre>
# rdiff-backup -r now 192.168.0.1::/media/sdb1/rdiff-backups/192.168.0.1/root/usr/local/games /usr/local/games
</pre>
				<p>Para restaurar o diretório /usr/local/games no PC remoto, iniciando o processo no PC local:</p>
<pre>
# rdiff-backup -r now /media/sdb1/rdiff-backups/192.168.0.1/root/usr/local/games 192.168.0.2::/usr/local/games
</pre>
				<p>Use a mesma sintaxe quando for restaurar a partição root a partir do LiveCD (onde o boot do PC remoto foi feito via LiveCD... veja mais acima).</p>

			<h5>Como automatizar os back-ups:</h5>

				<p>Se você estiver fazendo back-ups de outros PCs em sua máquina local, a primeira coisa a fazer é ativar logins sem senha no ssh, usando chaves ssh. <span class="highlight-2">Note que estamos falando de logins como root. Você pode limitar o rdiff-backup de forma que apenas seus comandos sejam executados, mas isso está fora do escopo deste tópico. Favor ver <a href="ssh-pt-br.htm#ssh-s">Configuração do SSH</a> </span>. Vamos configurar a maneira mais simples de fazer logins sem senha.</p>

				<p>No PC local, faça o seguinte:</p>
<pre>
# [ -f /root/.ssh/id_rsa ] || ssh-keygen -t rsa -f /root/.ssh/id_rsa
</pre>
				<p>... e pressione [ENTER] duas vezes para senhas em branco. Então digite:</p>
<pre>
# cat /root/.ssh/id_rsa.pub | ssh 192.168.0.2 'mkdir -p /root/.ssh;\<!--dunno if this is wrong-->
> cat - >>/root/.ssh/authorized_keys2'
</pre>
				<p>O sistema vai pedir sua senha de root.</p>

				<p>Agora você pode se conectar com o PC remoto pelo ssh, sem precisar de digitar uma senha, e o back-up do diff-backup passa a ser automatizado.</p>

				<p>A seguir, crie um script que contenha todos os comandos do rdiff-backup. Esse script terá mais ou menos essa feição:</p>


<pre>
#!/bin/bash
RDIFF=/usr/bin/rdiff-backup
echo
echo "=======Back-up de 192.168.0.1 root======="
${RDIFF} --ssh-no-compression --exclude '/tmp/*' --exclude '/proc/*' --exclude '/sys/*' --exclude '/media/*/*' / /media/sdb1/rdiff-backups/192.168.0.1/root
echo "(e purgue incrementos mais antigos que 1 mês)"
${RDIFF} --remove-older-than 1M --force /media/sdb1/rdiff-backups/192.168.0.1/root
echo
echo "=======Back-up de 192.168.0.1 partição sda5======="
${RDIFF} --ssh-no-compression --exclude /media/sda5/myjunk /media/sda5 /media/sdb1/rdiff-backups/192.168.0.1/sda5
echo "(e purgue incrementos mais antigos que 1 mês)"
${RDIFF} --remove-older-than 1M --force /media/sdb1/rdiff-backups/192.168.0.1/sda5
echo
echo "=======Back-up de 192.168.0.2 root======="
${RDIFF} --ssh-no-compression --exclude '/tmp/*' --exclude '/proc/*' --exclude '/sys/*' --exclude '/media/*/*' --exclude '/mnt/*/*' 192.168.0.2::/media/sdb1/rdiff-backups/192.168.0.2/root
echo "(e purgue incrementos mais antigos que 1 mês)"
${RDIFF} --remove-older-than 1M --force /media/sdb1/rdiff-backups/192.168.0.2/root
</pre>


				<p>Dê o nome de "myrdiff-backups.bash" a esse script, coloque-o no diretório /usr/local/bin de seu PC local (servidor de back-up), e torne-o executável. Rode o script para ter certeza de que funciona.</p>

				<p>Por fim, vamos pedir ao cron para rodá-lo todas as noites, às 20:00h. Insira a linha abaixo no crontab,como root:</p>
<pre>
# crontab -e
e insira a seguinte linha:
0 20 * * * /usr/local/bin/myrdiff-backups.bash
</pre>

			<div id="rev">Content last revised 13/01/2012 2330 UTC</div>
</div>
</div>
</div>
</body>
</html>
