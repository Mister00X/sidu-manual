<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>LAMP - MariaDb</title>
<style>
body            {margin: 0 auto; float: left; max-width: 1000px; padding: 4%; border: #CCC thin solid;}
p               {line-height: 1.3;}
code            {display: block; background-color: #EEE; padding: 0.5em; border: #CCC thin solid; border-radius: 3px;}
p code, li code {display: inline; color: #800; padding: 0.15em;}
li pre code     {display: block; color: #000; padding: 0.15em;}
table, th, td   {background-color: #EEC; border: #CCC thin solid; border-collapse: collapse; padding: 0.15em;}
hr              {height: 0.2em; background-color: #CCC; border: 0; margin: 2em 0 2em 0;}
figcaption      {font-size: 0.8em; color: #888;}
warning         {display: block; background: yellow; line-height: 1.3em; border: 0.2em solid #CCC; padding: 0.4em;}
#rev            {float:right; font-size: 0.8em; color: #888;}
</style>
</head>
<body>
<header id="title-block-header">
<h1 class="title">LAMP - MariaDb</h1>
</header>
<nav id="TOC" role="doc-toc">
<ul>
<li><a href="#mariadb">MariaDb</a>
<ul>
<li><a href="#erstkonfiguration">Erstkonfiguration</a></li>
<li><a href="#abfragen">Abfragen</a></li>
<li><a href="#eine-datenbank-anlegen">Eine Datenbank anlegen</a></li>
<li><a href="#einen-benutzer-anlegen">Einen Benutzer anlegen</a></li>
</ul></li>
<li><a href="#phpmyadmin">phpMyAdmin</a></li>
<li><a href="#quellen">Quellen</a></li>
</ul>
</nav>
<p>ANFANG INFOBEREICH FÜR DIE AUTOREN<br />
Dieser Bereich ist vor der Veröffentlichung zu entfernen !!!<br />
<strong>Status: RC2</strong></p>
<p>Änderungen 2020-12:</p>
<ul>
<li>Inhalt vollständig erneuert.</li>
<li>Für die Verwendung mit pandoc optimiert.</li>
</ul>
<p>ENDE INFOBEREICH FÜR DIE AUTOREN</p>
<hr />
<h2 id="mariadb">MariaDb</h2>
<h3 id="erstkonfiguration">Erstkonfiguration</h3>
<p>Nach der Installation, wie sie in <a href="./lamp-start_de.htm">LAMP-Testserver für Entwickler</a> beschrieben wurde, ist MariaDB <em>‘offen wie ein Scheunentor für jedermann’</em>, denn in der Grundeinstellung werden die beiden Benutzer <em>root</em> und <em>anonymous</em>, ohne Passwort erstellt und eine Testdatenbank angelegt.</p>
<p>Deshalb rufen wir das Programm <strong>mysql_secure_installation</strong> im root-Terminal auf.<br />
Hier nehmen wir eine ganze Reihe von Einstellungen zur Absicherung der Datenbank vor. Die notwendigen Eingaben sind so gekennzeichnet: “«- - [ ]”.</p>
<pre><code># mysql_secure_installation  

In order to log into MariaDB to secure it, we&#39;ll need the current
password for the root user. If you&#39;ve just installed MariaDB, and
you haven&#39;t set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): «--[Enter]  
OK, successfully used password, moving on...

Setting the root password or using the unix_socket ensures that nobody can  
log into the MariaDB root user without the proper authorisation.

You already have your root account protected, so you can safely answer &#39;n&#39;.

Switch to unix_socket authentication [Y/n]:   «--[n]  
 ... skipping.

You already have your root account protected, so you can safely answer &#39;n&#39;.

Change the root password? [Y/n]:   «--[y]  
New password:                      «--[mein_mariadb_root_passwort]  
Re-enter new password:             «--[mein_mariadb_root_passwort]  
Password updated successfully!  
Reloading privilege tables..  
... Success!

By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them. This is intended only for testing, and to make the installation
go a bit smoother. You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n]:   «--[y]  
... Success!

Normally, root should only be allowed to connect from &#39;localhost&#39;. This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n]   «--[y]  
... Success!

By default, MariaDB comes with a database named &#39;test&#39; that anyone can
access. This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n]   «--[y]  
- Dropping test database...  
... Success!  
- Removing privileges on test database...  
... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n]   «--[y]
... Success!

Cleaning up...

All done! If you&#39;ve completed all of the above steps, your MariaDB  
installation should now be secure.

Thanks for using MariaDB!</code></pre>
<p>Im Ergebnis hat der Benutzer <em>root</em> ein (hoffentlich sicheres) Passwort erhalten und er kann sich nicht mehr remote einloggen. Der Benutzer <em>anonymous</em> und die Datenbank <em>Test</em> wurden entfernt.</p>
<h3 id="abfragen">Abfragen</h3>
<p>Wir schauen uns das Ergebnis in Terminal an. Zuerst der Login zu MariaDb für dem Benutzer <em>root</em>. Nach der Eingabe des Passwortes sehen wir die Begrüßung und den neuen Promt <code>MariaDB [(none)]&gt;</code>.</p>
<pre><code># mariadb -u root -p
Enter password:
Welcome to the MariaDB monitor.  [...]

MariaDB [(none)]&gt;</code></pre>
<p>Anschließend lassen wir uns die Benutzer und die vorhandenen Datenbanken anzeigen.</p>
<pre><code>MariaDB [(none)]&gt; SELECT User,Host FROM mysql.user;
+-------------+-----------+
| User        | Host      |
+-------------+-----------+
| mariadb.sys | localhost |
| mysql       | localhost |
| phpmyadmin  | localhost |
| root        | localhost |
+-------------+-----------+
4 rows in set (0.002 sec)

MariaDB [(none)]&gt; SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| phpmyadmin         |
+--------------------+
4 rows in set (0.001 sec)</code></pre>
<p>Aus Sicherheitsgründen sollten wir <strong>nie als Benutzer root</strong> die täglichen Arbeiten in MariaDb erledigen. Wir legen je einen Benutzer als Ersatz für <em>root</em> und einen für die Arbeit mit der ebenfalls neu zu erstellenden Datenbank unseres Entwicklungsprojektes an. Später im Abschnitt <a href="#phpmyadmin">PHPMyAdmin</a> entziehen wir dem Benutzer <em>root</em> die allumfassenden Rechte, damit ein potentieller Angreifer an dieser Stelle erfolglos bleibt.</p>
<h3 id="eine-datenbank-anlegen">Eine Datenbank anlegen</h3>
<p>Wir sind noch im Terminal als <em>MariaDb-root</em> angemeldet und erstellen für unser Projekt eine neue Datenbank:</p>
<pre><code>MariaDB [(none)]&gt; CREATE DATABASE sidu;
Query OK, 1 row affected (0.002 sec)</code></pre>
<p>Das ist schon alles. Falls wir diese Datenbank löschen wollen hilft “DROP DATABASE sidu;”</p>
<h3 id="einen-benutzer-anlegen">Einen Benutzer anlegen</h3>
<p>Zuerst erstellen wir unseren Projekt-Benutzer mit dem Namen <em>tomtom</em> und weisen ihm anschließend alle Rechte an der Projekt-Datenbank <em>sidu</em> zu:</p>
<pre><code>MariaDB [(none)]&gt; CREATE USER tomtom@localhost IDENTIFIED BY &#39;&lt;hier ein Passwort für tomtom eingeben&gt;&#39;;
Query OK, 0 rows affected (0.002 sec)

MariaDB [(none)]&gt; GRANT ALL ON sidu.* TO tomtom@localhost;
Query OK, 0 rows affected (0.001 sec)</code></pre>
<p>Nun die gleiche Prozedur für den Benutzer <em>chef</em>, der die Aufgabe von <em>root</em> übernehmen soll.</p>
<pre><code>MariaDB [(none)]&gt; CREATE USER chef@localhost IDENTIFIED BY &#39;&lt;hier ein Passwort für chef eingeben&gt;&#39;;
Query OK, 0 rows affected (0.002 sec)

MariaDB [(none)]&gt; GRANT ALL ON *.* TO chef@localhost WITH GRANT OPTION;
Query OK, 0 rows affected (0.001 sec)

MariaDB [(none)]&gt; FLUSH PRIVILEGES;</code></pre>
<p>Die neuen Benutzer unterscheiden sich in ihren Rechten.</p>
<p><em>tomtom</em> hat alle Rechte <strong>nur</strong> für die Datenbank <em>sidu</em> ( <code>sidu.*</code> ).<br />
<em>chef</em> hat alle Rechte an allen Datenbanken ( <code>*.*</code> ) und Benutzern ( <code>WITH GRANT OPTION</code> ).</p>
<p>Der Benutzer <em>chef</em> kann somit die Funktion des Benutzers <em>root</em> übernehmen.</p>
<hr />
<h2 id="phpmyadmin">phpMyAdmin</h2>
<p>Wie zuvor gesehen, lässt sich MariaDb vollständig über die Komandozeile verwalten. Wer die Syntax beherrscht, und dafür ist profundes Fachwissen erforderlich, kommt auf diesem Weg schnell zum gewünschten Ergebnis.</p>
<p>Wir verwenden das für weniger erfahrene Benutzer besser geeignete Progrann <em>phpMyAdmin</em> und geben in die Adresszeile des Browsers<br />
<strong>http://localhost/phpmyadmin/</strong><br />
ein.</p>
<p>Um, wie oben angeführt, dem Datenbank-Admin <em>root</em> die Rechte zu entziehen, benutzen wir im Anmeldefenster gleich unseren neuen Datenbank-Admin <em>chef</em> mit seinem Passwort.</p>
<figure>
<img src="../../static/images-de/phpmyadmin-de/login.png" alt="" /><figcaption>Loginfenster</figcaption>
</figure>
<p>Im Startfenster sehen wir in der linken Spalte alle Datenbanken. Im Hauptteil wählen wir den Reiter <code>Benutzerkonten</code>.</p>
<figure>
<img src="../../static/images-de/phpmyadmin-de/startfenster.png" alt="" /><figcaption>Startfenster</figcaption>
</figure>
<p>Die Benutzerkontenübersicht stellt alle Benutzer und in Kurzform deren Rechte dar. Wir wählen hier für den Benutzer <em>root</em> den Schalter <code>Rechte ändern</code>.</p>
<figure>
<img src="../../static/images-de/phpmyadmin-de/benutzerkonten.png" alt="" /><figcaption>Benutzerkonten</figcaption>
</figure>
<p>Nun sehen wir für den Benutzer <em>root</em> die detaillierten Rechte. Hier sind wir zu unserer eigenen Sicherheit grob und entziehen ihm alle Rechte.</p>
<figure>
<img src="../../static/images-de/phpmyadmin-de/root-rechte.png" alt="" /><figcaption>Rechte eines Benutzers verwalten</figcaption>
</figure>
<p>Bestätigt wird die Aktion ganz unten mit dem Schalter <code>OK</code>. Interessant dürfte auch der Schalter <code>Konsole</code> sein, der am unteren Fensterrand eine solche öffnet. Hier kann man direkt Konsolebefehle eingeben und es werden die vom Programm generierten und ausgeführten Befehle angezeigt.<br />
Mit unserem Beispiel sieht das so aus:</p>
<pre><code>REVOKE ALL PRIVILEGES ON *.* FROM &#39;root&#39;@&#39;localhost&#39;;
REVOKE GRANT OPTION ON *.* FROM &#39;root&#39;@&#39;localhost&#39;;
GRANT USAGE ON *.* TO &#39;root&#39;@&#39;localhost&#39; REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 
 -&gt;  MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;</code></pre>
<p>Um PHPMyAdmin zu verlassen, benutzen wir in der linken Spalte das Tür-Ikon.</p>
<figure>
<img src="../../static/images-de/phpmyadmin-de/abmelden.png" alt="" /><figcaption>PHPMyAdmin beenden</figcaption>
</figure>
<p>PHPMyAdmin bietet umfangreiche Möglichkeiten zur Verwaltug der Datenbanken ihrer Tabellen und deren Inhalte. Beachtet werden sollte der Reiter <code>Exportieren</code> im Hauptfenster, hinter dem sich die Möglichkeit zur Datensicherung findet.</p>
<hr />
<h2 id="quellen">Quellen</h2>
<p><a href="https://mariadb.com/kb/en/documentation/">MariaDb Dokumentation</a> (englisch)</p>
<hr />
<div id="rev">
Zuletzt bearbeitet: 2020-12-20
</div>
</body>
</html>
