<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> <html
xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
<title>siduction Manuals - Upgrade BIOS FreeDOS </title> 
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<style type="text/css" media="all">@import url("../css/content.css");</style>
<style type="text/css" media="all">@import url("../css/menu.css");</style> <style type="text/css" media="print">@import url("../css/print.css");</style>
<link rel="shortcut icon" href="../favicon.ico" />
<script type="text/javascript" src="../js/menu2.js"></script> 
<!--[if lt IE 8]>
<link rel="stylesheet" type="text/css" href="../css/ie_5-7_override.css">
<![endif]--> <!--[if lt IE 7]> <link rel="stylesheet" type="text/css"
href="../css/ie_5-6_override.css"> <![endif]--> 
</head> 
<body class="body-main">
<div>
<div id="main-page"> 
<div class="divider" id="bois-prep">
		<h2 id="top-header">Aktualisierung des BIOS mit FreeDOS</h2> <p>Man möchte
		- oder sollte manchmal sogar - das BIOS eines Computers aktualisieren, wenn der
		Hersteller des Motherboards Verbesserungen der BIOS-Software vornimmt. Das
		Installationsprogramm ist in der Regel eine Anwendung auf MS-DOS-Basis.</p>

							<p>Wir stellen nun eine Möglichkeit vor, wie man das BIOS
							unter Linux von einem USB-Stick oder einer micro/mini/SD-Karte (mit einem
							geeigneten Adapter) aktualisieren kann.</p>

							<p>Als Erstes muss im BIOS das Booten von USB zugelassen
							werden, und das BIOS muss mit USB-Festplatten umgehen können. Einige BIOS
							akzeptieren USB-Diskettenlaufwerke, CD-ROMs oder ZIP-Laufwerke. Die meisten
							davon können geeignet sein, aber eine BIOS-Aktualisierung kann sich schwieriger
							gestalten. Oft ist das jedoch die einzige Möglichkeit (das betrifft vor allem
							Netbooks).</p>

 <h3>Drei Voraussetzungen:</h3> <ol> <li>ein USB-Stick: bevorzugt sind &lt;2 GByte
 (FAT16 erlaubt nicht mehr als 2 GByte, aber eine vollständige FreeDOS-Installation
 benötigt nur 5.8 MByte). <span class="highlight-3">FAT16 ist empfohlen, da FAT32
 nicht von jedem BIOS als bootfähig erkannt wird</span>.</li>

							<li>ein FreeDOS-Installationsmedium: <a
							href="http://www.freedos.org/freedos/files/"> fdbasecd.iso (8MByte)</a>.</li>

							<li>qemu (apt-get install qemu): qemu wird für die
							Installationsroutine benötigt. Das emulierte qemu-BIOS führt dazu, dass FreeDOS
							den USB-Stick als normale Festplatte erkennt und man auf traditionelle Art
							installieren kann (man muss keine FreeDOS-CD brennen).</li> </ol>

				<h5><span class="highlight-2">SEHR WICHTIGE, KRITISCHE INFORMATION:
				zu keinem Zeitpunkt darf der USB-Stick eingebunden, d.h. gemountet werden. Es
				muss peinlichst darauf geachtet werden, die richtige Gerätedatei (engl. device
				node) zu wählen, ansonsten werden sämtliche Daten auf dem falschen Datenträger
				(der Festplatte!) unwiderruflich gelöscht.</span></h5>

	<div class="spacer02"></div>

							<p>Der USB-Stick wird angesteckt <span
							class="highlight-2">und nicht eingebunden</span>. Mit den letzten Ausgaben von
							dmesg ermittelt man, welche Gerätedatei dem USB-Stick zugewiesen wurde. In
							unseren Beispielen wird <span class="highlight-3">/dev/sdb</span> verwendet.</p>

							<p>Der USB-Stick wird gelöscht, <span
							class="highlight-3">wobei alle Daten verloren gehen</span>. Man kann auch den
							ganzen USB-Stick löschen, nicht nur die ersten 16 MByte, wie im Beispiel. </p>

<pre>
$ sux
Password:
dd if=/dev/zero of=/dev/sdb bs=1M count=16
16+0 records in
16+0 records out
16777216 bytes (17 MByte) copied, 2.35751 s, 7.1 MByte/s 
</pre>

<h3>Partitionieren des USB-Sticks</h3> <p>Die korrekte Partitionierung und
 Formatierung des USB-Sticks ist vermutlich der schwierigste Teil.</p>

<p>Das Partitions-Label wird auf FAT16 gesetzt, auf Sticks mit &lt;2 GByte (dies bietet bessere Kompatibilität).</p>

<p>Danach fdisk auf die Partition ausführen:</p>

<pre> 
# fdisk /dev/sdb
fdisk /dev/sdb Device contains neither a valid DOS partition
table, nor Sun, SGI or OSF disklabel Building a new DOS disklabel with disk
identifier 0xa8993739. Changes will remain in memory only, until you decide to
write them. After that, of course, the previous content won't be recoverable.

Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)
</pre>

<p>Anlegen der Partition:</p> 

<pre>
Command (m for help): <span class="highlight-3"><b>n</b></span>
Command action
   e   extended
   p   primary partition (1-4)
<span class="highlight-3"><b>p</b></span>
Partition number (1-4): <span class="highlight-3"><b>1</b></span>
First cylinder (1-1018, default 1):
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-1018, default 1018):
Using default value 1018
</pre> 


<p>Bestätigung des Anlegens der Partiton, indem die Partitionstabelle geschrieben wird:</p>

<pre> 
Command (m for help): <span class="highlight-3"><b>p</b></span>

Disk /dev/sdb: 2003 MByte, 2003828736 bytes 62 heads, 62 sectors/track, 1018
cylinders Units = cylinders of 3844 * 512 = 1968128 bytes Disk identifier:
0xa8993739

Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            1        1018     1956595+  83  Linux 
</pre> 

<p>Setzen des korrekten Partitionslabels , '6' für FAT16:</p>
 
<pre> 
Command (m for help): <span class="highlight-3"><b>t</b></span>
Selected partition 1
Hex code (type L to list codes): <span class="highlight-3"><b>l</b></span>

 0  Empty           1e  Hidden W95 FAT1 80  Old Minix       be  Solaris boot
 1  FAT12           24  NEC DOS         81  Minix / old Lin bf  Solaris
 2  XENIX root      39  Plan 9          82  Linux swap / So c1  DRDOS/sec (FAT-
 3  XENIX usr       3c  PartitionMagic  83  Linux           c4  DRDOS/sec (FAT-
 4  FAT16 &lt;32M      40  Venix 80286     84  OS/2 hidden C:  c6  DRDOS/sec (FAT-
 5  Extended        41  PPC PReP Boot   85  Linux extended  c7  Syrinx
 6  FAT16           42  SFS             86  NTFS volume set da  Non-FS data
 7  HPFS/NTFS       4d  QNX4.x          87  NTFS volume set db  CP/M / CTOS / .
 8  AIX             4e  QNX4.x 2nd part 88  Linux plaintext de  Dell Utility
 9  AIX bootable    4f  QNX4.x 3rd part 8e  Linux LVM       df  BootIt
 a  OS/2 Boot Manag 50  OnTrack DM      93  Amoeba          e1  DOS access
 b  W95 FAT32       51  OnTrack DM6 Aux 94  Amoeba BBT      e3  DOS R/O
 c  W95 FAT32 (LBA) 52  CP/M            9f  BSD/OS          e4  SpeedStor
 e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a0  IBM Thinkpad hi eb  BeOS fs
 f  W95 Ext'd (LBA) 54  OnTrackDM6      a5  FreeBSD         ee  EFI GPT
10  OPUS            55  EZ-Drive        a6  OpenBSD         ef  EFI (FAT-12/16/
11  Hidden FAT12    56  Golden Bow      a7  NeXTSTEP        f0  Linux/PA-RISC b
12  Compaq diagnost 5c  Priam Edisk     a8  Darwin UFS      f1  SpeedStor
14  Hidden FAT16 &lt;3 61  SpeedStor       a9  NetBSD          f4  SpeedStor
16  Hidden FAT16    63  GNU HURD or Sys ab  Darwin boot     f2  DOS secondary
17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fd  Linux raid auto
18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fe  LANstep
1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid ff  BBT
1c  Hidden W95 FAT3 75  PC/IX

Hex code (type L to list codes): <span class="highlight-3"><b>6</b></span>

Changed system type of partition 1 to 6 (FAT16)   
</pre> 

<p>Aktivierung der neuen
und einzigen Partition:</p> <pre> Command (m for help): <span
class="highlight-3"><b>a</b></span> Partition number (1-4): <span
class="highlight-3"><b>1</b></span> </pre> <p>Die neue Partitionstabelle wird
nochmals geschrieben, und man bestätigt neuerlich, dass die Partition aktiviert
wird:</p> 

<pre> 
Command (m for help): <span class="highlight-3"><b>p</b></span>

Disk /dev/sdb: 2003 MByte, 2003828736 bytes 62 heads, 62 sectors/track, 1018
cylinders Units = cylinders of 3844 * 512 = 1968128 bytes Disk identifier:
0xa8993739

Device Boot      Start         End      Blocks   Id  System 
/dev/sdb1   *        1        1018     1956595+   6  FAT16 
</pre>
 
<p>Die neue Partitionstabelle
   wird auf dem USB-Stick gespeichert und fdisk beendet:</p> 
   
<pre> 
Command (m for help): <span class="highlight-3"><b>w</b></span> 
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: If you have created or modified any DOS 6.x partitions, please see the
fdisk manual page for additional information. Syncing disks. # exit 
</pre>

<p>Formatieren des neu aufgesetzten USB-Sticks:</p> 

<pre> 
mkfs -t vfat -n FreeDOS /dev/sdb1
exit 
</pre> 

<p>Die Vorbereitungsphase ist nun abgeschlossen.
Der USB-Stick wurde partitioniert und formatiert. Nun kann der Installationsprozess begonnen werden.</p>

					<h3>FreeDOS mit qemu booten</h3>

							<p>Da DOS keine USB-Sticks kennt, muss man einen Weg
							finden, um FreeDOS eine normale "Festplatte" vorzugaukeln. Bei einem "Live-Boot"
							übernimmt das BIOS diese Funktion, in unserem Fall muss man zu diesem
							Zweck jedoch qemu verwenden::</p> 
<pre>
Als normaler Benutzer$: 
qemu -hda	/dev/sdb -cdrom /path/to/fdbasecd.iso -boot d 
</pre>

<p><span class="highlight-1">ctrl-alt</span> schaltet Maus und Tastatur zwischen qemu und
Hostsystem. Damit kann man Desktops wechseln und jeden Schritt in der Anleitung					neu lesen.</p>

		<div class="screenshot"><img
		src="../lib/images-common/images-qemu-freedos/qemu-boot01.jpg" title="QEMU
		FreeDOS" alt="QEMU FreeDOS" /></div> <p>Damit wird FreeDOS CD gebootet und der
		USB-Stick wird als primäre Master-Festplatte erkannt (qemus Fähigkeit zur
		BIOS-Emulation lässt den USB-Stick für DOS als gewöhnliche Festplatte
		erscheinen).  Nun wird der Installer im Boot-Menu des virtualisierten FreeDOS
		gewählt:</p> <pre> 1) Continue to boot FreeDOS from CD-ROM <span
		class="highlight-3"><b>1</b></span> enter </pre> <div class="spacer02"></div>
		<p>Man wählt die Grundeinstellung <span class="highlight-3">1</span> bzw.
		antwortet <span class="highlight-3">Yes</span>, falls angefragt.</p>

	<div class="spacer02"></div> <div class="screenshot"><img
	src="../lib/images-common/images-qemu-freedos/qemu-boot02.jpg" title="Freedos
	Installation - 1" alt="freedos-inst1" /></div>

		<div class="spacer02"></div> <div class="screenshot"><img
		src="../lib/images-common/images-qemu-freedos/qemu-boot04.jpg" title="Freedos
		Installation - 2"  alt="freedos-inst2" /></div>

	<div class="spacer02"></div>

	<div class="spacer02"></div> <div class="screenshot"><img
	src="../lib/images-common/images-qemu-freedos/qemu-boot09.jpg" title="Freedos
	Installation - 3" alt="freedos-inst3" /></div>

 <div class="spacer02"></div>

<p>Die Installationsroutine fordert nun zu einem Reboot auf - <span class="highlight-3">dies wird noch nicht gemacht, da noch zwei Fehler des FreeDOS Installers bezüglich mbr und Bootmenü behoben werden müssen</span>.
Man gibt den Buchstaben <span class="highlight-3"><b>n</b></span> ein.</p> 

<div class="spacer02"></div> <div class="screenshot"><img src="../lib/images-common/images-qemu-freedos/qemu-boot18.jpg" title="Freedos 							Installation - N eingeben, nicht neustarten!" alt="freedos-do not reboot type n"/></div>

	<div class="spacer02"></div> <h3>Schreiben eines Bootsektors auf den
	USB-Stick</h3> <p>Der mbr-Fehler wird behoben durch:</p>

<pre>
fdisk /mbr 1
</pre>

<p>Der Bootmenüfehler wird in der neuen fdconfig.sys
behoben, indem man ausführt:</p>

<pre>
cd \ edit fdconfig.sys
</pre> 

<p>und dieZeile beginnend mit command.com so abändert:</p> 

<pre>
1234?SHELLHIGH=C:\FDOS\command.com C:\FDOS /D /P=C:\fdauto.bat /K set (don't
actually change this command, just add "1234?" to the begin of the line (before SHELLHIGH==C:\FDOS\command.com ..... 
NOTE it is to read : <span class="highlight-3">1234?</span>
</pre> 

<div class="screenshot"><img
src="../lib/images-common/images-qemu-freedos/qemu-boot23.jpg"
title="fdconfig.sys bearbeiten" alt="fdconfig.sys" /></div> <div
class="spacer02"></div> <p><span class="highlight-2">Ansonsten darf nichts
geändert werden, da die Zeile von dem Installations-Setup abhängt.</span></p>

<p>Speichern und "edit" verlassen:</p>

<pre>
[alt]+[f]
</pre>

<p>Zurück beim Befehlszeilen-Prompt kann qemu verlassen werden.</p>

<p>Nun wird getestet, ob qemu den USB-Stick bootet.</p>
 							
<pre>
qemu -hda /dev/sdb -boot c
</pre>

<p>Der USB-Stick ist nun bootfähig und enthält eine vollständige FreeDOS-Installation mit 5,4 MByte, um flashen zu können.
Man sollte booten, ohne Treiber zu laden <span class="highlight-3">(Menüoption 4), himem.sys und emm386 könnten in die Flashing-Programme reinpfuschen!</span>:</p>

<h3>Aktualisierung des BIOS</h3>

<p>Der FreeDOS USB-Stick wird in ein laufendes System angesteckt, eingebunden und die benötigten BIOS-Dateien (Herstellerempfehlung) werden auf dem FreeDOS USB-Stick gespeichert. 
Die Einbindung des USB-Sticks wird danach gelöst.</p>

<p> Der PC wird ausgeschaltet und der FreeDOS USB-Stick angesteckt. Der PC wird eingeschaltet, sodass der FreeDOS USB-Stick bootet, danach wird den Anweisungen des Herstellers des BIOS bzw. Motherboards gefolgt.</p>

</div>
			<div id="rev">Page last revised 08/01/2012 1545 UTC</div>
</div>
</div>
</body>
</html>
