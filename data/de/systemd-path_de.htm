<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>Systemd - path</title>
<style>
body            {margin: 0 auto; float: left; max-width: 1000px; padding: 4%; border: #CCC thin solid;}
p               {line-height: 1.3;}
code            {display: block; background-color: #EEE; padding: 0.5em; border: #CCC thin solid; border-radius: 3px;}
p code, li code {display: inline; color: #800; padding: 0.15em;}
li pre code     {display: block; color: #000; padding: 0.15em;}
table, th, td   {background-color: #EEC; border: #CCC thin solid; border-collapse: collapse; padding: 0.15em;}
hr              {height: 0.2em; background-color: #CCC; border: 0; margin: 2em 0 2em 0;}
figcaption      {font-size: 0.8em; color: #888;}
warning         {display: block; background: yellow; line-height: 1.3em; border: 0.2em solid #CCC; padding: 0.4em;}
img             {border: 0.1em solid #CCC;}
#rev            {float:right; font-size: 0.8em; color: #888;}
</style>
</head>
<body>
<header id="title-block-header">
<h1 class="title">Systemd - path</h1>
</header>
<nav id="TOC" role="doc-toc">
<ul>
<li><a href="#systemd-der-system--und-dienste-manager">systemd der System- und Dienste-Manager</a></li>
<li><a href="#systemd.path">systemd.path</a>
<ul>
<li><a href="#benötigte-dateien">Benötigte Dateien</a></li>
<li><a href="#path-unit-optionen">.path-Unit Optionen</a></li>
<li><a href="#path-unit-anlegen">.path-Unit anlegen</a></li>
<li><a href="#service-unit-anlegen">.service-Unit anlegen</a></li>
<li><a href="#path-unit-eingliedern">.path-Unit eingliedern</a></li>
</ul></li>
<li><a href="#quellen">Quellen</a></li>
</ul>
</nav>
<p>ANFANG INFOBEREICH FÜR DIE AUTOREN<br />
Dieser Bereich ist vor der Veröffentlichung zu entfernen !!!<br />
<strong>Status: RC2</strong></p>
<p>Änderungen 2021-02:</p>
<ul>
<li>Neu “systemd-path Unit”</li>
<li>Für die Verwendung mit pandoc optimiert.</li>
</ul>
<p>Änderungen 2021-04:</p>
<ul>
<li>Durch “systemd-unit-datei” erforderliche Anpassungen</li>
</ul>
<p>ENDE INFOBEREICH FÜR DIE AUTOREN</p>
<hr />
<h2 id="systemd-der-system--und-dienste-manager">systemd der System- und Dienste-Manager</h2>
<p>Die grundlegenden und einführenden Informationen zu Systemd enthält die Handbuchseite <a href="./systemd-start_de.htm">Systemd-Start</a>. Die alle Unit-Dateien betreffenden Sektionen <em>[Unit]</em> und <em>[Install]</em> behandelt unsere Handbuchseite <a href="./systemd-unit-datei_de.htm">Systemd Unit-Datei</a>.<br />
In der vorliegenden Handbuchseite erklären wir die Funktion der Unit <strong>systemd.path</strong>, mit der systemd Pfade überwacht und Pfad-basierte Aktionen auslöst.</p>
<hr />
<h2 id="systemd.path">systemd.path</h2>
<p>Die “<em>.path-Unit</em>” ermöglicht es, bei Änderungen an Dateien und Verzeichnissen (Pfaden) eine Aktion auszulösen.<br />
Sobald ein Ereignis eintritt, kann Systemd einen Befehl oder ein Skript über eine Service Unit ausführen. Die “<em>.path-Unit</em>” ist nicht in der Lage Verzeichnisse rekursiv zu überwachen. Es können aber mehrere Verzeichnisse und Datein angegeben werden.<br />
Die Pfad-spezifischen Optionen werden in dem Abschnitt <em>[Path]</em> konfiguriert.</p>
<hr />
<h3 id="benötigte-dateien">Benötigte Dateien</h3>
<p>Die <strong>systemd-path</strong>-Unit benötigt für ihre Funktion mindestens zwei Dateien mit vorzugsweise dem gleichen Namen, aber unterschiedlicher Namenserweiterung, im Verzeichnis <em>/usr/local/lib/systemd/system/</em>. (Ggf. ist das Verzeichnis zuvor mit dem Befehl <strong><code>mkdir -p /usr/local/lib/systemd/system/</code></strong> anzulegen.) Das sind die</p>
<ul>
<li>Path-Unit-Datei (&lt;name&gt;.path), welche die Überwachung und den Auslöser für die Service-Unit enthält<br />
und die<br />
</li>
<li>Service-Unit-Datei (&lt;name&gt;.service), welche die zu startende Aktion enthält.<br />
Für umfangreichere Aktionen erstellt man zusätzlich ein Skript in <em>/usr/local/bin/</em>, das von der Service-Unit ausgeführt wird.</li>
</ul>
<h3 id="path-unit-optionen">.path-Unit Optionen</h3>
<p>Die <em>.path-Unit</em> muss zwingend die Sektion <em>[Path]</em> enthalten, in der festgelegt wird wie und was zu überwachen ist.</p>
<p>Die speziellen Optionen sind:</p>
<ul>
<li><p>PathExists=<br />
prüft, ob der betreffende Pfad existiert. Wenn es zutrifft, wird die zugehörige Unit aktiviert.</p></li>
<li><p>PathExistsGlob=<br />
Wie oben, unterstützt Datei-Glob-Ausdrücke.</p></li>
<li><p>PathChanged=<br />
beobachtet eine Datei oder einen Pfad und aktiviert die zugehörige Unit, wenn Änderungen auftreten.<br />
Aktionsauslösende Änderungen sind:</p>
<ul>
<li>Erstellen und Löschen von Dateien.<br />
</li>
<li>Atribute, Rechte, Eigentümer.<br />
</li>
<li>Schließen der zu beobachtenden Datei nach Schreibzugriff und schließen irgendeiner Datei nach Schreibzugriff bei Beobachtung des Pfades.</li>
</ul></li>
<li><p>PathModified=<br />
wie zuvor, aber zusätzlich wird die zugehörige Unit bei einfachen Schreibzugriffen aktiviert, auch wenn die Datei nicht geschlossen wird.</p></li>
<li><p>DirectoryNotEmpty=<br />
aktiviert die zugehörige Unit wenn das Verzeichnis nicht leer ist.</p></li>
<li><p>Unit=<br />
die zu aktivierende, zugehörige Unit. Zu beachten ist auch, dass die <em>.path-Unit</em> standardmäßig die “<em>.service-Unit</em>” mit dem gleichen Name aktiviert. Nur bei Abweichungen hiervon ist die Option <em>Unit=</em> innerhalb der Sektion <em>[Path]</em> notwendig.</p></li>
<li><p>MakeDirectory=<br />
das zu beobachtenden Verzeichnis wird vor der Beobachtung erstellt.</p></li>
<li><p>DirectoryMode=<br />
legt bei Verwendung, für das zuvor erstellte Verzeichnis, den Zugriffsmodus in oktaler Notation fest. Standardmäßig 0755.</p></li>
</ul>
<h4 id="das-beispiel">Das Beispiel</h4>
<p>An einem Beispiel, das auf der Konfiguration des Apache-Webservers entsprechend unserer Handbuchseite <a href="./lamp-apache_de.htm#benutzer-und-rechte">LAMP - Apache, Benutzer und Rechte</a> basiert, wollen wir das Zusammenspiel der <em>.path-Unit</em> mit anderen <em>systemd-Unit</em> verdeutlichen.</p>
<p>Zuerst eine graphische Übersicht, die die Abhängigkeiten der <em>systemd-Units</em> unseres Beispiels darstellt:</p>
<pre><code>
  ┌───────────────────────┐
  │ server1-watch.service │
  └───┬─────────────┬─────┘
      │             ▲
      │      überwacht rekursiv 
      ▼             ▲
 schreibt nach      │
      ▼             │
      │    ┌────────┴────────────┐
      │    │  APACHE WEBSERVER   │
      │    │    DokumentRoot:    │
      │    │ /var/www/html/…/…/… ├┐
      │    ├─────────────────────┤│
      │    │       DATEI:        ││
      └────┤ /var/www/changed    ││
           └─┬───────────┬───────┘│
             │           │        │
  ╔══════════│═══════════│════════│═╗
  ║          ▼           │        │ ║
  ║      überwacht       │        │ ║
  ║          ▼           │        │ ║
  ║   ┌──────┴───────┐   │        │ ║
  ║   │ server1.path │   │        │ ║
  ║   └──────┬───────┘   │        │ ║
  ║          ▼           │        │ ║
  ║      aktiviert       │        │ ║
  ║          ▼           │        │ ║
  ║          │           │        │ ║
  ║          │           │        │ ║
  ║ ┌────────┴────────┐  │        │ ║
  ║ │ server1.service │  │        │ ║
  ║ └────────┬────────┘  │        │ ║
  ║          ▼           │        │ ║
  ║      führt aus       │        │ ║
  ║          ▼           │        │ ║
  ║          └───────────┴────────┘ ║
  ║                                 ║
  ╚═════════════════════════════════╝
</code></pre>
<p>Der doppelt umrandete Teil in der Graphik verdeutlicht die Kernfunktion der <em>.path-Unit</em>. Die <em>server1.path</em>-Unit überwacht die Datei “<em>/var/www/changed</em>” und aktiviert bei Änderungen die zugehörige <em>server1.service</em>-Unit. Diese wiederum führt dann die gewünschten Aktionen im Verzeichnis “<em>/var/www/html/</em>” aus und stellt die Datei “<em>/var/www/changed</em>” zurück.<br />
Die außerhalb der Umrandung liegende “<em>server1-watch.service</em>”-Unit übernimmt die rekursive Überwachung von <em>DocumentRoot</em> des Apache-Webservers.</p>
<h3 id="path-unit-anlegen">.path-Unit anlegen</h3>
<p>Wir legen die Datei <em>server1.path</em> im Verzeichnis <em>/usr/local/lib/systemd/system/</em>, die die Datei <em>/var/www/changed</em> auf Änderungen überwacht, mit folgendem Inhalt an:</p>
<pre><code>[Unit]
Description=Monitoring &quot;changed&quot; file!
BindsTo=server1-watch.service
After=server1-watch.service

[Path]
PathModified=/var/www/changed

[Install]
WantedBy=multi-user.target</code></pre>
<h4 id="erklärungen">Erklärungen</h4>
<p>Sektion [Unit]:<br />
Die Option “<em>BindsTo=</em>” stellt die stärkste verfügbare Bindung zweier systemd-Einheiten aneinander dar. Falls eine von ihnen während des Starts oder des Betriebs in einen Fehlerzustand übergeht, wird die andere auch unmittelbar beendet.<br />
Zusammen mit der Option “<em>After=</em>” wird erreicht, dass die <em>server1.path</em>-Unit erst startet, nachdem die <em>server1-watch.service</em>-Unit ihren erfolgreichen Start an systemd zurückmeldet.</p>
<p>Sektion [Path]:<br />
“<em>PathModifid=</em>” ist die richtige Wahl. Die Option reagiert auf Änderungen in der Datei <em>/var/www/changed</em>, selbst wenn die Datei nicht geschlossen wird.<br />
Die Option “<em>PathModifid=</em>” (oder andere, siehe oben) kann mehrfach angegeben werden.</p>
<h3 id="service-unit-anlegen">.service-Unit anlegen</h3>
<p>Die <em>server1.service</em>-Unit wird von der <em>server1.path</em>-Unit aktiviert und kontrolliert und benötigt daher keine <em>[Install]</em> Sektion. Somit reichen die Beschreibung der Unit in der Sektion <em>[Unit]</em>, und in der Sektion <em>[Service]</em> die auszuführenden Befehle, aus.</p>
<p>Wir legen die Datei <em>server1.service</em> im Verzeichnis <em>/usr/local/lib/systemd/system/</em> mit folgendem Inhalt an.</p>
<pre><code>[Unit]
Description=Change permissions in server1 folder

[Service]
Type=oneshot
ExecStartPre=/usr/bin/truncate -s 0 /var/www/changed
ExecStart=/usr/bin/chown -R www-data /var/www/html/
ExecStart=/usr/bin/chmod -R g+w /var/www/html/
ExecStart=/usr/bin/chmod -R o-r /var/www/html/</code></pre>
<h4 id="erklärungen-1">Erklärungen</h4>
<p>Sektion [Service]:<br />
“<em>ExecStart=</em>”-Befehle werden nur ausgeführt, nachdem sich alle “<em>ExecStartPre=</em>”-Befehle erfolgreich beendet haben. Zuerst wird die Datei <em>/var/www/changed</em> auf 0-Bite zurückgesetzt und danach der Rest ausgeführt.</p>
<h4 id="zusätzliche-.service-unit-anlegen">Zusätzliche .service-Unit anlegen</h4>
<p>Da die <em>.path-Unit</em> Verzeichnisse nicht rekursiv überwachen kann, benötigen wir für unser Beispiel eine zusätzliche <em>.service-Unit</em>. Wir legen die Datei <em>server1-watch.service</em> im Verzeichnis <em>/usr/local/lib/systemd/system/</em> mit folgendem Inhalt an.</p>
<pre><code>[Unit]
Description=Watching server1 folder.
Before=server1.path
Wants=server1.path

[Service]
Type=forking
ExecStart=inotifywait -dqr -e move,create -o /var/www/changed /var/www/html/

[Install]
WantedBy=multi-user.target</code></pre>
<p>Anmerkung:<br />
Interressant ist, dass systemd intern das inotify-API für <em>.path-Unit</em> verwendet, um Dateisysteme zu überwachen, jedoch deren Rekursiv-Funktion nicht implementiert.</p>
<h4 id="erklärungen-2">Erklärungen</h4>
<p>Die Sektion [Unit]:<br />
“<em>Before=</em>” und “<em>Wants=</em>” sind die entsprechenden Korrellationen zu “<em>BindsTo=</em>” und “<em>After=</em>” aus der <em>server1.service-Unit</em>.</p>
<p>Sektion [Service]:<br />
<em>inotifywait</em> protokolliert in die Datei <em>/var/www/changed</em>, die außerhalb von <em>DocumentRoot</em> des Apache-Webservers liegt.</p>
<h3 id="path-unit-eingliedern">.path-Unit eingliedern</h3>
<p>Auf Grund der Abhängigkeit gliedern wir zuerst die <em>server1.path-Unit</em> und dann die <em>server1-watch.service-Unit</em> in systemd ein. Die <em>server1.service-Unit</em> benötigt und beinhaltet keine [Install]-Sektion. Bei dem Versuch sie einzugliedern erhielten wir eine Fehlermeldung.</p>
<pre><code># systemctl enable server1.path
Created symlink /etc/systemd/system/multi-user.target.wants/server1.path \
  → /usr/local/lib/systemd/system/server1.path.
  
# systemctl enable server1-watch.service
Created symlink /etc/systemd/system/multi-user.target.wants/server1-watch.service \
  → /usr/local/lib/systemd/system/server1-watch.service.</code></pre>
<p>Nun ist das Monitoring auch gleich aktiv, wie uns die Statusausgaben aller drei Units zeigen.</p>
<pre><code># systemctl status server1-watch.service
● server1-watch.service - Watching server1 folder.
     Loaded: loaded (/usr/local/lib/systemd/system/server1-watch.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-02-21 19:25:20 CET; 1min 49s ago
    Process: 23788 ExecStart=inotifywait -dqr -e move,create -o /var/www/changed /var/www/html/ \
      (code=exited, status=0/SUCCESS)
   Main PID: 23790 (inotifywait)
      Tasks: 1 (limit: 2322)
     Memory: 216.0K
        CPU: 5ms
     CGroup: /system.slice/server1-watch.service
             └─23790 inotifywait -dqr -e move,create -o /var/www/changed /var/www/html/

Feb 21 19:25:20 lap1 systemd[1]: Starting Watching server1 folder....
Feb 21 19:25:20 lap1 systemd[1]: Started Watching server1 folder..

# systemctl status server1.path
● server1.path - Monitoring &quot;changed&quot; file!
     Loaded: loaded (/usr/local/lib/systemd/system/server1.path; enabled; vendor preset: enabled)
     Active: active (waiting) since Sun 2021-02-21 19:25:20 CET; 3min 27s ago
   Triggers: ● server1.service

Feb 21 19:25:20 lap1 systemd[1]: Started Monitoring &quot;changed&quot; file!.

# systemctl status server1.service
● server1.service - Change permissions in server1 folder
     Loaded: loaded (/usr/local/lib/systemd/system/server1.service; static)
     Active: inactive (dead)
TriggeredBy: ● server1.path</code></pre>
<p>Der Status “Active: inactive (dead)” der letzten Ausgabe ist der normale Zustand für die Unit <em>server1.service</em>, denn diese Unit ist nur dann aktiv, wenn sie von <em>server1.path</em> angestoßen wurde ihre Befehlskette auszuführen. Danach geht sie wieder in den inaktiven Zustand über.</p>
<h4 id="server1.service-unit-manuell-ausführen">server1.service-Unit manuell ausführen</h4>
<p>Sollte es einmal hilfreich oder nötig sein die Dateirechte in <em>DocumentRoot</em> des Apache-Webservers manuell zu ändern, setzen wir einfach diesen Befehl ab:</p>
<pre><code># systemctl start server1.service</code></pre>
<p>Eine erneute Statusabfrage generiert zusätzlich einige Protokollzeilen, denen wir den erfolgreichen Durchlauf der Befehlskette entnehmen können.</p>
<pre><code># systemctl status server1.service
● server1.service - Change permissions in server1 folder
     Loaded: loaded (/usr/local/lib/systemd/system/server1.service; static)
     Active: inactive (dead) since Mon 2021-02-22 17:55:36 CET; 1min 43s ago
TriggeredBy: ● server1.path
    Process: 2822 ExecStartPre=truncate -s 0 /var/www/changed (code=exited, status=0/SUCCESS)
    Process: 2823 ExecStart=chown -R www-data /var/www/html1/ (code=exited, status=0/SUCCESS)
    Process: 2824 ExecStart=chmod -R g+w /var/www/html1/ (code=exited, status=0/SUCCESS)
    Process: 2825 ExecStart=chmod -R o-r /var/www/html1/ (code=exited, status=0/SUCCESS)
   Main PID: 2825 (code=exited, status=0/SUCCESS)
        CPU: 19ms

Feb 22 17:55:36 lap1 systemd[1]: Starting Change permissions in server1 folder...
Feb 22 17:55:36 lap1 systemd[1]: server1.service: Succeeded.
Feb 22 17:55:36 lap1 systemd[1]: Finished Change permissions in server1 folder.</code></pre>
<hr />
<h2 id="quellen">Quellen</h2>
<p><a href="https://manpages.debian.org/testing/manpages-de/systemd.path.5.de.html">Deutsche Manpage ‘systemd.path’</a></p>
<p>Ein anders gelagertes Beispiel:<br />
<a href="https://www.pro-linux.de/artikel/2/1994/systemd-path-units-zum-%C3%9Cberwachen-von-dateien-und-verzeichnissen-verwenden.html">PRO-LINUX.DE, Systemd Path Units…</a></p>
<hr />
<div id="rev">
Seite zuletzt aktualisert 2021-04-06
</div>
</body>
</html>
