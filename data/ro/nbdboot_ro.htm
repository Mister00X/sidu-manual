<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ro" lang="ro">
<head>
	<title>Manualul siduction - Boot-are din rețea (nbd).</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<style type="text/css" media="all">@import url("../lib/css-js/content.css");</style>
	<style type="text/css" media="all">@import url("../lib/css-js/version-date.css");</style>
        <style type="text/css" media="all">@import url("../lib/css-js/menu.css");</style>
        <style type="text/css" media="print">@import url("../lib/css-js/print.css");</style>
        <link rel ="shortcut icon" href="../lib/favicon/manual.ico" />
        <script type="text/javascript" src="../js/menu2.js"></script>
        <!--[if lt IE 8]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-7_override.css">
        <![endif]-->
        <!--[if lt IE 7]>
        <link rel="stylesheet" type="text/css" href="../lib/css-js/ie_5-6_override.css">
        <![endif]-->
</head>
<!-- Last translation revision bluewater 28/12/2009 1445 UTC-->
<body class="body-main">
<div>
<div id="main-page">
	<div class="divider" id="nbd1">
			<h2 id="top-header">Boot-area în rețea (network block device - nbd)</h2>

							<p><span class="highlight-2">ATENȚIE !: <i>dnsmasq</i> include un server <i>dhcp</i> ce poate intra în conflict cu un server <i>dhcp</i> existent în rețeaua voastră (router-ul poate oferi unul). </span>   <span class="highlight-3">Cel mai sigur este să folosiți doar un singur server <i>dhcp</i> într-o rețea. Asta înseamnă că trebuie să dezactivați toate serverele 'dncp' dintr-o rețea. Opțiunea 'dnsmasq proxy', menționată mai sus, ar trebui să poată co-exista cu un alt server <i>dhcp</i> în aceeași rețea, dar oricum vă rog să nu încercați asta decât dacă sunteți administratorul rețelei și sunteți pregătit să faceți față unor consecințe nedorite ce pot apare.</span></p>

			      <h4>Informații de bază</h4>
							<p>Pentru a putea boot-a din rețea trebuie să aveți un PC capabil să facă asta, care să poată fi conectat prin rețea la un PC programat să ofere servicii de boot-are în rețea. </p>

							<p>Nu faceți asta în rețeaua de la serviciu sau într-o rețea pe care nu o administrați dumneavoastră cu excepția cazului când o administrați sau aveți permisiunea și îndrumarea administratorului de rețea. Dacă sunteți co-operator într-o rețea mare cercetați toate opțiunile lui <i>dnsmasq</i>, cum ar fi limitarea interfețelor ascultate sau a clienților ce vor răspunde, pentru a reduce impactul setărilor voastre asupra rețelei.</p>

			      <h4>Condiții necesare</h4>
							<p>Un siduction iso 2009-04 (sau mai nou) boot-at să fie folosit ca serverul de boot din rețea (network boot server). În principiu, instrucțiunile ar trebui să fie aceleași pe oricare PC cu o versiune actualizată de siduction sau debian sid și ar trebui să vă ofere toate indiciile necesare a fi folosite pe alte sisteme. Linux este necesar pentru a servi dispozitivele 'nbd'.</p>

							<p>Vom folosi <i>dnsmasq</i> pentru a furniza totul în faza de boot-are inițială iar cunoștiințele necesare nu vor fi greu de adaptat altui software.</p>

				<h6>Instalarea</h6>
<pre>
apt-get install nbd-server dnsmasq
</pre>

				<h3>Configurarea 'nbd-server'</h3>

							<p> Presupunem că imaginea poate fi găsită la <span class="highlight-3">/dev/scd0</span>, (aceasta ar putea fi dacă se boot-ează de pe cd, altfel înlocuiți cu calea corespunzătoare către dispozitiv sau fișier), apoi puteți configura fișierul nbd-server numit <span class="highlight-3">nbd-siduction.conf</span> cu o secțiune numită siduction-iso pentru a exporta cd-ul rulând următoarele:</p>
<pre>
echo '[generic]' &gt; nbd-siduction.conf
nbd-server 0.0.0.0:10809 /dev/scd0 -o siduction-iso &gt;&gt; nbd-siduction.conf
</pre>
							<p>Titlul "generic" este totdeauna necesar. Dacă doriți să configurați 'nbd-server' să lucreze automat într-un sistem real va trebui probabil să configurați <span class="highlight-3">/etc/nbd-server.conf</span> în loc de <span class="highlight-3">nbd-siduction.conf</span>. Există mult mai multe opțiuni ale nbd-server decât am arătat aici, așa că citiți <span class="highlight-3">man nbd-server.</span></p>

							<p>Pentru a porni server-ul ca utilizator normal, fără a vă chinui cu setările sau să tot copiați fișierul la <span class="highlight-3">/etc/nbd-server.conf</span>, puteți rula comanda:</p>
<pre>
nbd-server -C nbd-siduction.conf
</pre>
							<p>Ținta lui nbd-server nu trebuie să fie un iso sau un cd/dvd/usb stick; trebuie doar să conțină o imagine corespunzătoare a sistemului de fișiere.</p>

				  <h4>dnsmasq</h4>
							<p>Următorul exemplu presupune că PC-ul vostru este într-o rețea simplă, cu o conexiune ethernet setată prin <i>dhcp</i> de la un alt PC pe care clienții de boot-are din rețea îl pot folosi pentru setarea interfețelor lor prin <i>dhcp</i>.</p>

							<p>Opțiunile cele mai relevante pentru <i>dnsmasq</i> ca siduction să boot-eze din rețea este de a configura o cale (path) pentru fișierele server-ului 'tftp' și un fișier pentru a boot-a de acolo. </p>

							<p>Creați un director <span class="highlight-3">tftp</span> pentru boot-are în <span class="highlight-3">/home</span> (puteți să-l creați oriunde vreți dacă preferați alt loc). Deci calea (path) devine <span class="highlight-3">/home/tftp</span>.</p>

							<p>Creați un fișier numit <span class="highlight-3">pxe-siduction.conf</span> și scrieți în el (copy/paste) următoarele:</p>
<pre>
dhcp-range=0.0.0.0,proxy
pxe-service=x86PC, &quot;boot linux&quot;, pxelinux
enable-tftp
tftp-root=/home/tftp
tftp-secure
</pre>
							<p>Când utilizați proxy-ul <i>dhcp</i> trebuie să oferiți un menu 'pxe' cu 'pxelinux' ca singură opțiune ce va porni automat. Asta face linia cu "pxe-service" de mai sus.</p>

 							<p>Ca root, mutați nou creatul fișier <span class="highlight-3">pxe-siduction.conf</span> în <span class="highlight-3">/etc/dnsmasq.d/</span>:</p>
<pre>
sux
mv pxe-siduction.conf /etc/dnsmasq.d/
</pre>

							<p>Notă: Pentru o rețea (e.g. 192.168.0.*) fără alt server <i>dhcp</i> puteți schimba primele două linii în:</p>
<pre>
dhcp-range=192.168.0.100,192.168.0.199,1h
dhcp-boot=pxelinux.0
</pre>

							<p>Pentru a oferi adrese IP începând cu 192.168.0.100 până la 192.168.0.199, cu un timp de reîmprospătare de o oră, și a da numele fișierului doar pentru a rula 'pxelinux.0' ca parte a cererii dhcp, de-comentați setarea "conf-dir" din josul fișierului <span class="highlight-3"> /etc/dnsmasq.conf</span> apoi restartați <i>dnsmasq</i>.</p>

							<p>Pentru ca noua configurație să fie folosită trebuie să de-comentați linia <span class="highlight-3">conf-dir=/etc/dnsmasq.d</span> de la sfârșitul fișierului <span class="highlight-3">/etc/dnsmasq.conf</span> apoi restart-ați dnsmasq.</p>

							<p><i>dnsmasq</i> are multe opțiuni și poate funcționa ca server 'dns' la fel de bine ca și server <i>dhcp</i>, 'pxe' și 'tftp'. Cele de mai sus sunt doar o simplă și minimală abordare a pieselor necesare utilizării 'pxelinux'.</p>

				  <h4>tftp</h4>
							<p>'tftp' este echivalentul de rețea al directorului de boot. Utilizând în continuare directorul <span class="highlight-3">/home/tftp </span> din exemplul nostru, trebuie să-l populăm. Dacă cdrom-ul este mount-at în <span class="highlight-3">/fll/scd0</span>:</p>
<pre>
cp /fll/scd0/boot/isolinux/* /home/tftp
mkdir /home/tftp/pxelinux.cfg
mv /home/tftp/isolinux.cfg /home/tftp/pxelinux.cfg/default
mkdir /home/tftp/boot
cp /fll/scd0/boot/vmlin* /fll/scd0/boot/initr* /fll/scd0/boot/memtest* /home/tftp/boot/
cp /usr/lib/syslinux/pxelinux.0 /home/tftp/
# required for the tftp-secure option to dnsmasq
chown -R dnsmasq.dnsmasq /home/tftp/*
</pre>

							<p>Acum puteți edita opțiunile de boot-are după cum doriți în <span class="highlight-3">/home/tftp</span> în ambele fișiere <span class="highlight-3">pxelinux.cfg/default</span> și <span class="highlight-3">gfxboot.cfg</span>.

							<p>În particular este recomandabil ca, în secțiunea <span class="highlight-3">[install]</span>, să setați <span class="highlight-3">install= </span>în <span class="highlight-3">install=nbd</span>, <span class="highlight-3">install.nbd.server</span> pentru IP-urile serverelor din rețea și <span class="highlight-3">install.nbd.port</span> pentru numele secțiunii de export a nbd, de exemplu. siduction-iso (ca nume de export nbd fiind mai explicit decât folosirea simplă a numerelor porturilor).</p>

							<p>Alternativ puteți dezactiva complet menu-ul F3 și editați linia de comandă a kernel-ului să folosească ceva de genul:</p>
<pre>
fromhd=/dev/nbd0 root=/dev/nbd0 nbdroot=192.168.1.23,siduction-iso nonetwork
</pre>


					<h6>codul de boot-are 'toram'</h6>
							<p>Dacă adăugați 'toram' la opțiunile de boot-are, PC-urile cu suficient RAM vor elibera serverul imediat după ce și-au copiat fișierele iar PC-urile fără suficient RAM vor boot-a normal. Cel puțin 1 gig de RAM, (ideal ar fi 2 gig sau mai mult), sunt necesari pentru 'toram'.</p>

				      <h4>Boot-area din rețea</h4>

							<p>Asigurați-vă că BIOS-urile PC-urilor clienți sunt setate să folosească <span class="highlight-3">Boot from Network</span>. </p>

							<p>Dacă BIOS-ul poate boot-a din rețea, PC-ul este conectat la o rețea cu server-ul vostru iar kernel-ul siduction și initrd.img suportă placa voastră de rețea, ar trebui să boot-ați siduction din rețea. </p>

							<p>Unele plăci de rețea pot cere non-free firmware ceea ce ar putea necesita reconstruirea imaginii 'initrd' pentru a include firmware-ul.</p>


	</div>
	<div id="rev">Page last revised 30/11/2012 0200 UTC </div>

</div>
</body>
</html>
